---
- name:          Cleanup Java Binaries directory
  file:          path={{ __java_tmp_dir }} state=absent
  ignore_errors: true

- name:          Cleanup WAS Binaries directory
  file:          path={{ __was_tmp_dir }} state=absent
  ignore_errors: true

#-  debug:       var=version_already_installed
- name:          Create Java Binaries directory
  file:          path={{ __java_tmp_dir }} state=directory mode=0755

- name:          Create WAS Binaries directory
  file:          path={{ __was_tmp_dir }} state=directory mode=0755

- name:          Create Logs directory
  file:          path={{ __logs_dir }} state=directory mode=0755

- name:          Download WAS Java
  get_url:
    url:         "{{ was_repository_url }}/{{ item.file_name }}"
    dest:        "{{ __java_tmp_dir }}/{{ item.file_name }}"
    mode:        0755
    checksum:    sha256:{{ item.check_sum }}
  with_items:    "{{ __java_files }}"

- name:          Extract WAS Java
  unarchive:
    src:         "{{ __java_tmp_dir }}/{{ item.file_name }}"
    dest:        "{{ __java_tmp_dir }}/"
    copy:        no
  with_items:    "{{ __java_files }}"

- name:          Download WAS ND V9.0.5 Files
  get_url:
    url:         "{{ was_repository_url }}/{{ item.file_name }}"
    dest:        "{{ __was_tmp_dir }}/{{ item.file_name }}"
    mode:        0755
    checksum:    sha256:{{ item.check_sum }}
  with_items:    "{{ __was_files }}"

- name:          Extract WAS ND V9.0.5 Files
  unarchive:
    src:         "{{ __was_tmp_dir }}/{{ item.file_name }}"
    dest:        "{{ __was_tmp_dir }}/"
    copy:        no
  with_items:    "{{ __was_files }}"

- name:          Generate WAS Response file
  template:
    src:         "{{ __tpl_file }}"
    dest:        "{{ __rsp_file }}"

- name:          Install IBM WAS Software
  command:
    chdir={{ __was_tmp_dir }}
    {{ __iim_install_location }}/eclipse/tools/imcl -acceptLicense -sVP -log {{ __log_file }} input {{ __rsp_file }}
  register:      cout
  changed_when:  ( cout.stdout.find( __version_check ) != -1)

- name:          Cleanup Java Binaries directory
  file:          path={{ __java_tmp_dir }} state=absent

- name:          Cleanup WAS Binaries directory
  file:          path={{ __was_tmp_dir }} state=absent
